# 1. Overview of Classes

## a. Class Student
This class is composed of two private member variables called number and name that store the student number and student's last name, respectively. HashTable classes use this class to store student information. Once it is initialized, you can't alter the value of the number or name since there are no setters.

## b. Template Class HashTable
This class represents a generic hash table that has a user-specified maximum capacity. It is designed as a template class to store the data of any data type. By implementing this class as a template class, it can be a parent class of both OpenHashTable and OrderedHashTable. This class is composed of basic member variables and functions that both OpenHashTable and OrderedHashTable have in common. The bucket of HashTable is an array of a template class. Since the size of the bucket never changes throughout the execution, I decided to implement it using a dynamically allocated array.

### Member variables/functions:
- `# size (dtype: int)`: Stores the number of entries in the bucket
- `# max_size (dtype: int)`: Stores the maximum size of the bucket
- `# array (dtype: T[ ]): Acts as a bucket of the table; stores data of type T`
- `# int hash_1 (unsigned int k)`: Primary hash function; returns (k mod max_size)`